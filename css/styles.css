body {
    padding: 0;
    margin: 0;
    background: beige;
}
  
div * {
    /* setting the default for all div's before I specify */
    padding: 0;
    margin: 0;
    /* border-box allows you to include the padding and border in the element's total width and height */
    box-sizing: border-box; 
}

#turn {
    /* setting specific dimensions to match my chess board */
    /* you need one pixel to hang over so it pushes my 8 div down to the next line */
    width: 401px;
    height: 30px;
    /* floats the element to the right of its container, being used because the element needs to be pushed to the right past the first div */
    float: right;
    text-align: center;
    padding: 0 0 5px 0;
    font-size: 18px;
  }

#game {
    /* 450 pixels is the exact width of each element in a row combined */
    /* it isn't dynamic but allows the chess board to line up properly */
    width: 450px;
    height: 480px;
    /* margin is centering it automatically with auto and setting a 100px gap from the top of the html */
    margin: 100px auto;
}

.tileprefix {
    width: 50px;
    height: 50px;
    /* float: left is used to sort by pushing each element to the left of the parent */
    float: left;
    /* used to center within the element based on my specific dimensions */
    padding: 15px 0 0 20px;
}

.tile {
    outline: 1px black solid;
    width: 50px;
    height: 50px;
    float: left;
    padding: 0 5px 0 0px;
    background-color: rgb(236,235,206);
}

.black {
    background: rgb(108, 138, 81);
}

img{
    /* this makes it so you click through the image into the parent, very important for the game logic */
    pointer-events: none;
}

.red{
    background: red;
}

.startButton{
    background-color: rgb(236,235,206);
    text-align: center;
    border-width: 3px;
    border-color: rgb(83, 97, 71);
    margin: auto;
    position: relative;
    display: flex;
    bottom: 366px;
    left: 24px;
    font-size: 22px;
    width: 70px;
    height: 32px;
}